#!/usr/bin/env bash

  # set variables
pg_dump="/home/Ryan/pgsql/bin/pg_dump.exe"
dump_path="/cygdrive/c/Users/ryan/Documents/Dropbox/Sierra/Backup/"
current_date=$(date +%Y-%m-%d__%H-%M-%S)
backup_file="$dump_path$current_date.backup"
log_file="$dump_path$current_date.log"

# Are we in cygwin?
if echo "$(uname -o)" == "Cygwin"; then
    # Convert to cygwin paths
  pg_dump="$(cygpath -w $pg_dump)"
  dump_path="$(cygpath -w $dump_path)"
  backup_file="$(cygpath -w $backup_file)"
  log_file="$(cygpath -w $log_file)"
fi

  # check dependencies
[[ ! -d "$dump_path" ]] && { echo "Directory not found: $dump_path";  echo "$(realpath $0): FATAL. Files not found."; exit 1; }
[[ ! -f "$pg_dump" ]] && { echo "pg_dump not found: $pg_dump"; echo "$(realpath $0): FATAL. Files not found."; exit 1 ; }

#
# Do your business
#
echo "using backup file... $backup_file"
echo "using log file... $log_file"

echo "Executing pg_dump..."
pg_dump --host 192.168.68.27 --port 5432 --username "postgres" --format tar --encoding UTF8 --verbose --file $backup_file susie &>> "$log_file"
pgdump_exit="$?"
echo "pg_dump process returned exit code: "$pgdump_exit | tee --append "$log_file"

#
# compress the backup
#
if type xz &> /dev/null; then
    xz -v "$backup_file"
    backup_file="$backup_file".xz
    xz -v "$log_file"
    log_file="$log_file".xz
else
    echo "$(realpath $0): FATAL. Archiver not found."
fi

  # show backup stats so we don't restore something absurdly huge
stat "$backup_file"

#
# restoring doesn't really work right now
#
              exit 0
#
#
#
  # then ask if we want to continue or not
if confirm "Do you want to attempt to restore?"; then
{
  set -x
    # drop the sandbox
  echo "Dropping sandbox database..."
  ssh -q -x mothership 'psql -U postgres -c "drop database susie;"'
  dropdb_exit=$?
  echo "dropdb process returned exit code: "$dropdb_exit

    # create the sandbox
  echo "Creating sandbox database..."
  ssh -q -x mothership 'psql -U postgres -c "create database susie;"'
  createdb_exit=$?
  echo "createdb process returned exit code: "$createdb_exit

    # restore to sandbox
  backup_basename="$(basename $backup_file)"
  echo "Uploading dump..."
  scp "$backup_file" ryan@mothership:/tmp/
  echo "Extracting dump..."
  ssh -q -x mothership 'bzip2 -d /tmp/'"$backup_basename"
  echo "Restoring to sandbox from dump..."
  ssh -q -x mothership "pg_restore -U postgres /tmp/${backup_basename%.bz2}"
  pgrestore_exit=$?
  echo "pg_restore process returned exit code: "$pgrestore_exit
}
fi
