#!/bin/sh

#set -x

homedir=$(echo "/media/crypt/hc/dl")

if [ "$1" = "-h" ]; then
        echo "4chandl is a script for downloading images from threads on 4chan.org"
        echo "Original author is unknown."
        echo ""
        echo "Usage: 4chandl [ subdirectory ] [ url ] [ wait ]"
        echo "Where:"
        echo "  subdirectory    subdirectory of the default download directory. The default can be set by editing the first line of the script."
        echo "  url             url to 4chan thread to be tracked."
        echo "  wait            seconds to wait between refreshing. Default is 30."
fi

if [ "$1" == "" -o "$2" == "" ]; then
	echo "Insufficient input. For help try: 4chandl -h"
	exit 1
fi

path="$1"
link="$2"

if [ "$3" == "" ]; then
        wait=30
else
        wait="$3"
fi

echo "4chan downloader"
echo "Downloading until canceled or 404'd"
THREAD=$(echo "$2" | egrep -o '([0-9]*)$' | sed "s@\.html@@")
TARGET=$(echo "$homedir""/""$1""/""$THREAD""/" | sed "s@~@""$HOME""@" )

if [ "$debug" ]; then
        echo "Homedir"
        echo "$homedir"
        echo "Arg 1"
        echo "$1"
        echo "Arg 2"
        echo "$2"
        echo "Thread"
        echo "$THREAD"
        echo "TARGET"
        echo "$TARGET"

        echo "Downloading to $TARGET"

        exit 1
fi

#Make the target directory
mkdir -p $TARGET

#Go there!
cd $TARGET

################################################################################################################
# 
# do your thang
# 

while [ "1" = "1" ]; do

    echo "Downloading..."
        #make two temporary files to play around with
    
	TMP=`mktemp`
	TMP2=`mktemp`

        #download html of thread into TMP
	\curl -s -o "$TMP" "$2" 

        #if there's nothing there to download, remove the empty TMP file and exit the script
	if [ "$?" != "0" ]; then
		rm "$TMP" "$TMP2"
		exit 1
	fi

        #otherwise, search the html file for all the images and store the output in TMP2
	grep -Po 'images.4chan.org/[a-z0-9]+/src/([0-9]*).(jpg|png|gif)' "$TMP" -o | sed -r "s@(.*)@http://\1@" > "$TMP2"

        #wget all the images in the array
	#\curl -C - -O $(cat $TMP2)
    cat "$TMP2" | while read x ; do \curl -s -O -C - $x ; done
 
	rm $TMP $TMP2
 
	echo "Waiting ""$wait"" seconds before next run"
	sleep "$wait"
done;

################################################################################################################

echo "Terminated: Thread expired."
