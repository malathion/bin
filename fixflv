#!/usr/bin/env bash
#
# Â© Copyright 2019 Ryan Delaney. All rights reserved.
# This work is distributed WITHOUT ANY WARRANTY whatsoever; without even the
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the README file for additional terms and conditions on your use of this
# software.
#
# fixflv() { ffmpeg -i broken.flv -acodec copy -vcodec copy fixed.flv; }

# Functions {{{1
verbose() {
  if [[ "$verbose" = "1" ]]; then
    echo "$1" >&2
  fi
}

error () {
  echo "$1" >&2
}
# }}}
# Usage {{{1
#
usage() {
cat <<EOD
fixflv fixes some errors in flash video files that prevent seeking.

Usage: fixflv [OPTION] [INPUTFILE] [OUTPUTFILE]

Options
  -?, --help                  print this help and exit
  -v, --verbose               increase verbosity
EOD
exit 1
}
# }}}
# Parameters {{{1
#
while :
do
  case $1 in
    --help | -\?)
      usage
      exit 0
      ;;
    -v | --verbose)
      # Each instance of -v adds 1 to verbosity
      verbose=$((verbose+1))
      shift
      ;;
    --) # End of all options
      shift
      break
      ;;
    -*)
      echo "FATAL: Unknown option : $1" >&2
      exit 1
      shift
      ;;
    *)  # no more options. Stop while loop
      break
      ;;
  esac
done

inputfile="$1"
outputfile="$2"
# }}}
# Dependencies {{{1
if ! type ffmpeg 2> /dev/null; then
  error "FATAL: missing dependency: ffmpeg" && exit 1
fi

if [[ -z "$inputfile" ]] || [[ -z "$outputfile" ]]; then
  error "FATAL: argument not optional." && exit 1
fi
# }}}

ffmpeg -v "$verbose" -i "$inputfile" -acodec copy -vcodec copy "$outputfile.flv"

# EOF
